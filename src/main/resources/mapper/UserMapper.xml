<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.teamreadioserver.user.mapper.UserMapper">

    <resultMap id="userResultMap" type="com.team.teamreadioserver.user.entity.User">
        <id property="userId" column="user_id"/>
        <result property="userRole" column="user_role"/>
        <result property="userName" column="user_name"/>
        <result property="userPwd" column="user_pwd"/>
        <result property="userEmail" column="user_email"/>
        <result property="userPhone" column="user_phone"/>
        <result property="userBirthday" column="user_birthday"/>
        <result property="userEnrolldate" column="user_enrolldate"/>
    </resultMap>

    <insert id="insertUser" parameterType="com.team.teamreadioserver.user.dto.JoinRequestDTO">
        INSERT INTO user (user_id, user_role, user_name, user_pwd, user_email, user_phone, user_birthday,
                          user_enrolldate)
        VALUES (#{userId}, 'USER', #{userName}, #{userPwd}, #{userEmail}, #{userPhone}, #{userBirthday}, NOW())
    </insert>

    <select id="countByUserId" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM `user`
        WHERE user_id = #{userId}
    </select>

    <select id="countByUserEmail" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM `user`
        WHERE user_email = #{userEmail}
    </select>

    <select id="countByUserPhone" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM `user`
        WHERE user_phone = #{userPhone}
    </select>

    <select id="findByUserId" parameterType="string" resultMap="userResultMap">
        SELECT user_id,
               user_role,
               user_name,
               user_pwd,
               user_email,
               user_phone,
               user_birthday,
               user_enrolldate as userEnrollDate
        FROM `user`
        WHERE user_id = #{userId}
    </select>

    <!--비밀번호 확인-->
    <select id="getPasswordByUserId" parameterType="string" resultType="string">
        SELECT user_pwd
        FROM `user`
        WHERE user_id = #{userId}
    </select>

    <!--회원정보 조회-->
    <select id="selectUserById" parameterType="string"
            resultType="com.team.teamreadioserver.user.dto.UserInfoResponseDTO">
        SELECT user_id       as userID,
               user_name     as userName,
               user_email    as userEmail,
               user_phone    as userPhone,
               user_birthday as userBirthday,
               user_role     as userRole
        FROM `user`
        WHERE user_id = TRIM(#{userId})
    </select>

    <!--회원정보 수정-->
    <update id="updateUser" parameterType="com.team.teamreadioserver.user.dto.UserEditRequestDTO">
        UPDATE user
        <set>
            <if test="userEmail != null">
                user_email = #{userEmail},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone},
            </if>
            <if test="userBirthday != null">
                user_birthday = #{userBirthday},
            </if>
            <if test="userPwd != null and userPwd != ''">user_pwd = #{userPwd},
            </if>
        </set>
        WHERE user_id = #{userId}
    </update>

    <!--회원정보 수정 시 비밀번호 기존값 유지-->
    <select id="selectPasswordByUserId" parameterType="string" resultType="string">
        SELECT user_pwd
        FROM `user`
        WHERE user_id = #{userId}
    </select>

    <!--아이디 찾기(이름,휴대폰번호로)-->
    <select id="findIdByNameAndPhone" resultType="string">
        SELECT user_id
        FROM `user`
        WHERE user_name = #{userName}
          AND user_phone = #{userPhone}
    </select>

    <!--비밀번호 찾기(아이디와 이메일 일치여부 확인 후 인증번호 발송 가능)-->
    <select id="existsByUserIdAndEmail" resultType="int">
        SELECT EXISTS(
            SELECT 1
            FROM `user`
            WHERE user_id = #{userId}
              AND user_email = #{userEmail}
        )
    </select>

    <!--비밀번호 찾기(비밀번호 재설정)-->
    <update id="updatePassword">
        UPDATE `user`
        SET user_pwd = #{newPassword}
        WHERE user_id = #{userId}
    </update>

    <!--회원탈퇴-->
    <delete id="deleteUserById" parameterType="String">
        DELETE FROM `user`
        WHERE user_id = #{userId}
    </delete>



</mapper>